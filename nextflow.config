
queue = 'batch'


gsImage = "quay.io/shaze/gs"

manifest {
    homePage = 'http://github.com/shaze/GS'
    description = 'Wits Nextflow implemenration of the CDC genotyping'
    mainScript = "main.nf"
}


process {
    container = gsImage
}



profiles {

   legacy {

      env {
	 PATH='/opt/exp_soft/bioinf/ncbi-blast/2.2.29/:/opt/exp_soft/bioinf/bedtools/2.18.0:/opt/exp_soft/bioinf/velvet/1.2.10KM250:/opt/exp_soft/bioinf/freebayes/0.9.21:/opt/exp_soft/bioinf/cutadapt/1.8.3/bin:/opt/exp_soft/bioinf/prodigal/2.6.0/:/opt/exp_soft/bioinf/samtools/0.1.18/bin:/opt/exp_soft/bioinf/bowtie2/2.2.9/:/opt/exp_soft/bioinf/ncbi-blast-2.2:/opt/exp_soft/python/2.7.18/:/opt/exp_soft/bioinf/FastQC:/opt/exp_soft/bioinf/srst2/0.1.7/bin:/opt/exp_soft/bioinf/bin:/opt/exp_soft/python36/bin/:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/exp_soft/bin:/bin:/opt/exp_soft/bioinf/vcftools/bin/:'
	 PYTHONPATH='/opt/exp_soft/bioinf/srst2/0.1.7/:/opt/exp_soft/bioinf/cutadapt/1.8.3/lib/python3.12/site-packages'
	 PERL5LIB='/opt/exp_soft/perl/share/perl5/5.32/:/usr/share/perl5/:/usr/share/perl5/vendor_perl/:/usr/lib64/perl5/vendor_perl/:/opt/exp_soft/bioinf/lib/perl5/site_perl'
	 SRST2_BOWTIE2='/opt/exp_soft/bioinf/bowtie2/2.2.9/bowtie2'
	 SRST2_BOWTIE2_BUILD='/opt/exp_soft/bioinf/bowtie2/2.2.9/bowtie2_build'
	 SRST2_SAMTOOLS='/opt/exp_soft/bioinf/samtools/0.1.18/bin/samtools'
      }
    }


    standard {
        process.executor = 'local'
    }

    awsbatch {
         process.executor = "awsbatch"
	 aws.region    ='af-south-1'
         aws.uploadStorageClass = 'ONEZONE_IA'
    }


    slurm {
        process.executor = 'slurm'
        process.queue = queue
    }

    pbs {
        process.executor = 'pbs'
        process.queue = queue
    }


    singularity {
        singularity.autoMounts = true
        singularity.enabled = true
    }


    docker {
        process.executor = 'local'
        docker.remove      = true
        docker.registry    = 'quay.io'
        docker.enabled     = true
        docker.temp        = 'auto'
        docker.fixOwnership= true
	docker.runOptions = '-u $(id -u):$(id -g) --rm'
        docker.process.executor = 'local'
    }



}


params {
      	   out_dir   = "output"
	   batch_dir = "0"
	   cutadapt_cores=4
	   strepA_DB = "/dataC/CRDM/GAS_Reference_DB"
	   strepB_DB = "/dataC/CRDM/GBS_Reference_DB"
	   max_forks=10
	   suffix="fastq.gz"
	   publish = "copy"
	   max_velvet_cpus=2
}
